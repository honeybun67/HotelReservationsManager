@model IndexUsersViewModel

@{
    Dictionary<string, string> routs = new Dictionary<string, string>()
    {
        {"filterByName", Model.FilterByName },
        {"itemsPerPage",Model.ItemsPerPage.ToString()}
    };
}

<style>
    body {
        background-color: #fffde7; /* светло жълто */
    }

    h2 {
        color: #f9a825; /* наситено жълто-оранжево */
        font-weight: bold;
    }

    .btn-primary {
        background-color: #ffca28;
        border-color: #ffb300;
        color: #000;
    }

    .btn-outline-secondary {
        border-color: #fbc02d;
        color: #f57f17;
    }

        .btn-outline-secondary:hover {
            background-color: #fbc02d;
            color: #000;
        }

    .btn-secondary {
        background-color: #fff59d;
        border-color: #fbc02d;
        color: #000;
    }

    .btn-danger {
        background-color: #f44336;
        border-color: #d32f2f;
    }

    .form-control {
        border: 1px solid #fdd835;
    }

    .table {
        border: 2px solid #fbc02d;
    }

    table thead {
        background-color: #ffeb3b;
        color: #000;
    }

    table tbody tr:nth-child(odd) {
        background-color: #fff9c4;
    }

    table tbody tr:nth-child(even) {
        background-color: #fffde7;
    }

    .pagination .page-link {
        color: #f57f17;
        border: 1px solid #fbc02d;
    }

    .pagination .active .page-link {
        background-color: #ffca28;
        border-color: #fbc02d;
        color: #000;
    }

    select.form-control {
        background-color: #fffde7;
        border: 1px solid #fdd835;
        color: #000;
    }

    hr {
        border-top: 2px solid #fbc02d;
    }
</style>

<h2>Users page</h2>
<a asp-action="Create" class="btn btn-primary">Create</a>
<hr />

<form asp-action="Index" method="get">
    <div class="input-group mb-3">
        <button type="submit" class="btn btn-outline-secondary">Search</button>
        <input asp-for="FilterByName" type="text" class="form-control" placeholder="Name" aria-label="Search" aria-describedby="basic-addon2">
    </div>
</form>

<table class="table table-bordered table-striped table-hover">
    <thead>
        <tr>
            <th>
                @{
                    routs["sortUsersBy"] = "Name";
                }
                <a asp-all-route-data="routs">Full name</a>
            </th>
            <th>
                @{
                    routs["sortUsersBy"] = "Role";
                }
                <a asp-all-route-data="routs">Role</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>@user.Name</td>
                <td>@user.Role</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-secondary">Edit</a>
                    @if (user.Role != "Admin")
                    {
                        <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-sm btn-danger">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="...">
    <ul class="pagination justify-content-center">
        <li style="margin-right:5px">
            <form asp-action="@Model.Action" method="post" id="pageSizeForm">
                <select asp-for="ItemsPerPage" class="form-control border-dark" onchange="changeItemsPerPage();">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                </select>
                <input type="submit" id="loginSubmit" style="visibility:hidden" />
            </form>
        </li>

        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-action="@Model.Action" asp-all-route-data="routs" asp-route-page="@Model.PreviousPageNumber">
                <i class="fas fa-step-backward"></i>
            </a>
        </li>

        @for (int i = Model.Page - 2; i < Model.Page; i++)
        {
            if (i > 0)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-all-route-data="routs" asp-route-page="@i">@i</a>
                </li>
            }
        }

        <li class="page-item active" aria-current="page">
            <span class="page-link">
                @Model.Page
                <span class="sr-only">(current)</span>
            </span>
        </li>

        @for (int i = Model.Page + 1; i <= Model.Page + 2; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-all-route-data="routs" asp-route-page="@i">@i</a>
                </li>
            }
        }

        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-action="@Model.Action" asp-all-route-data="routs" asp-route-page="@Model.NextPageNumber">
                <i class="fas fa-step-forward"></i>
            </a>
        </li>
    </ul>
</nav>

<script type="text/javascript">
    function changeItemsPerPage() {
        document.getElementById('pageSizeForm').submit();
    }
</script>
