@using HotelReservationsManager.Data.Models.Enum

@model IndexRoomsViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Rooms</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New Room</a>
</p>

<form asp-action="Index" method="get">
    <div>
        <h4>Filter by:</h4>
        <div>
            <label asp-for="Capacity"></label>
            <input type="number" asp-for="Capacity" name="Capacity" />
        </div>
        <div>
            <label asp-for="FilterByType"></label>
            <select class="form-select" asp-for="FilterByType" asp-items="Html.GetEnumSelectList<RoomType>()" name="FilterByType">
                <option selected></option>
            </select>
        </div>
        <div>
            <label asp-for="IsAvailable"></label>
            <input type="checkbox" asp-for="IsAvailable" name="IsAvailable" />
        </div>
        <input type="hidden" asp-for="Page" />
        <input type="hidden" asp-for="ItemsPerPage" />
        <input type="submit" class="btn btn-info" />
    </div>
</form>

<table class="table table-bordered table-striped table-hover" style="border-radius: 10px; overflow: hidden; text-align:center">
    <thead>
        <tr>
            <th>Capacity</th>
            <th>Number</th>
            <th>Type</th>
            <th>Available</th>
            <th>PricePerAdultBed</th>
            <th>PricePerChildBed</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Rooms)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsAvailable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PricePerAdultBed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PricePerChildBed)
                </td>
                <td>
                    @if (this.User.IsInRole(GlobalConstants.AdminRole))
                    {
                        <p class="text-nowrap">
                            <a asp-action="Edit" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-secondary">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success">Details</a> |
                            <a asp-action="Delete" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                        </p>
                    }
                    else
                    {
                        <p class="text-nowrap">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success">Details</a>
                        </p>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="..." class="">
    <ul class="pagination justify-content-center">
        <li style="margin-right:5px">
            <form asp-action="@Model.Action" method="post" id="pageSizeForm">
                <select asp-for="ItemsPerPage" class="form-control border-dark" onchange="changeItemsPerPage();">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                </select>
                <input type="submit" id="loginSubmit" style="visibility:hidden" />
            </form>
        </li>
        <li class="page-item @(Model.Page <= 1 ? "disabled" : "")">
            <a class="page-link" asp-action="@Model.Action" asp-route-page="@(Model.Page - 1)" asp-route-itemsPerPage="@Model.ItemsPerPage"
               asp-route-Capacity="@Model.Capacity" asp-route-FilterByType="@Model.FilterByType" asp-route-IsAvailable="@Model.IsAvailable">
                Back
                <i class="fas fa-step-backward"></i>
            </a>
        </li>
        @for (int i = Model.Page - 2; i < Model.Page; i++)
        {
            if (i > 0)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-route-page="@i" asp-route-itemsPerPage="@Model.ItemsPerPage"
                       asp-route-Capacity="@Model.Capacity" asp-route-FilterByType="@Model.FilterByType" asp-route-IsAvailable="@Model.IsAvailable">@i</a>
                </li>
            }
        }
        <li class="page-item active" aria-current="page">
            <span class="page-link">
                @Model.Page
                <span class="sr-only"></span>
            </span>
        </li>
        @for (int i = Model.Page + 1; i <= Model.Page + 2; i++)
        {
            if (i <= Model.PagesCount)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="@Model.Action" asp-route-page="@i" asp-route-itemsPerPage="@Model.ItemsPerPage"
                       asp-route-Capacity="@Model.Capacity" asp-route-FilterByType="@Model.FilterByType" asp-route-IsAvailable="@Model.IsAvailable">@i</a>
                </li>
            }
        }
        <li class="page-item @(Model.Page >= Model.PagesCount ? "disabled" : "")">
            <a class="page-link" asp-action="@Model.Action" asp-route-page="@(Model.Page + 1)" asp-route-itemsPerPage="@Model.ItemsPerPage"
               asp-route-Capacity="@Model.Capacity" asp-route-FilterByType="@Model.FilterByType" asp-route-IsAvailable="@Model.IsAvailable">
                Next<i class="fas fa-step-forward"></i>
            </a>
        </li>
    </ul>
</nav>

<script type="text/javascript">
    function changeItemsPerPage() {
        document.getElementById('pageSizeForm').submit();
    }
</script>
